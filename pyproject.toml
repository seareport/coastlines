[tool.poetry]
name = "coastlines"
version = "0.1.0"
description = ""
authors = ["Panos Mavrogiorgos <pmav99@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
cartopy = "*"
cyclopts = "*"
dask = {version = "*", extras = ["array", "dataframe", "diagnostics", "distributed", "complete"]}
geopandas = "*"
geoviews = "*"
httpx = "*"
hvplot = "*"
ipykernel = "*"
ipympl = "*"
matplotlib = "*"
multifutures = "*"
mypy = "*"
pandas = "*"
pyarrow = "*"
pyogrio = "*"
pyproj = "*"
pytest = "*"
shapely = "*"
datashader = "*"
spatialpandas = "*"

[tool.poetry.scripts]
coastlines = 'coastlines.__main__:main'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 108
target-version = ['py311']


[tool.mypy]
python_version = "3.11"
plugins = []
show_error_codes = true
show_column_numbers = true
show_error_context = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
strict = true
ignore_missing_imports = true


[tool.ruff]
target-version = "py311"
line-length = 108
lint.select = [
  "ARG",  # flake8-unused-argument
  "B",  # flake8-bugbear
  "C4",  # flake8-comprehensions
  "C90",  # mccabe
  "COM",  # flake8-commas
  # "D",  # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",  # pycodestyle
  "EXE",  # flake8-executable
  "FA",  # flake8-future-annotations
  "FBT",  # flake8-boolean-trap
  "F",  # pyflakes
  "ICN",  # flake8-import-conventions
  # "I",  # isort
  "ISC",  # flake8-implicit-str-concat
  "N",  # pep8-naming
  "PL",  # Pylint
  "Q",  # flake8-quotes
  "RUF",  # Unused noqa
  "S",  # flake8-bandit
  "TID",  # flake8-tidy-imports
  "T",  # pyupgrade
  "T10",  # flake8-debugger
  "UP",  # pyupgrade
  "W",  # Warning
  "YTT",  # flake8-2020
]
lint.ignore = [
  "N812",  # lowercase-imported-as-non-lowercase
  "PLR0913",  # too-many-arguments
  "S101",  # assert
  "F401",  # Unused imports; Let pyright report this
]
lint.unfixable = [
  "F401",  # Don't touch unused imports
]

[tool.codespell]
skip = '*.po,*.ts,*.lock'
